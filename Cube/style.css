* {
  padding: 0;
  margin: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html, body {
  width: 100vw;
  height: 100vh;
  background-color: #fff;
}

.container {
  width: 100%;
  height: 100%;
}

.plane {
  position: absolute;
  width: 200px;
  height: 200px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  background-color: black;
  border: 0.5px solid rgba(255, 255, 255, 0.5);
  -webkit-transition: background-color 500ms ease-in-out, border 500ms ease-in-out, -webkit-transform 500ms ease-in-out;
  transition: background-color 500ms ease-in-out, border 500ms ease-in-out, -webkit-transform 500ms ease-in-out;
  transition: transform 500ms ease-in-out, background-color 500ms ease-in-out, border 500ms ease-in-out;
  transition: transform 500ms ease-in-out, background-color 500ms ease-in-out, border 500ms ease-in-out, -webkit-transform 500ms ease-in-out;
}

#cube {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform-origin-z: 100px;
  -webkit-transform: translate(-50%, -50%) rotateX(30deg) rotateY(300deg) rotateZ(90deg);
          transform: translate(-50%, -50%) rotateX(30deg) rotateY(300deg) rotateZ(90deg);
  width: 30%;
  height: 60%;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  -webkit-animation: rotate-cube 15s linear infinite;
          animation: rotate-cube 15s linear infinite;
}

#cube #top {
  -webkit-transform-origin: bottom;
          transform-origin: bottom;
  -webkit-transform: translate(-50%, -150%) rotateX(-90deg);
          transform: translate(-50%, -150%) rotateX(-90deg);
}

#cube #bottom {
  -webkit-transform-origin: top;
          transform-origin: top;
  -webkit-transform: translate(-50%, 50%) rotateX(90deg);
          transform: translate(-50%, 50%) rotateX(90deg);
}

#cube #left {
  -webkit-transform-origin: right;
          transform-origin: right;
  -webkit-transform: translate(-150%, -50%) rotateY(90deg);
          transform: translate(-150%, -50%) rotateY(90deg);
}

#cube #right {
  -webkit-transform-origin: left;
          transform-origin: left;
  -webkit-transform: translate(50%, -50%) rotateY(-90deg);
          transform: translate(50%, -50%) rotateY(-90deg);
}

#cube #back {
  -webkit-transform: translateX(-50%) translateY(-50%) translateZ(200px);
          transform: translateX(-50%) translateY(-50%) translateZ(200px);
}

#cube:hover .plane {
  background-color: rgba(0, 0, 0, 0.6);
  border: 0.5px solid white;
}

#cube:hover #front {
  -webkit-transform: translateX(-50%) translateY(-50%) translateZ(-100px);
          transform: translateX(-50%) translateY(-50%) translateZ(-100px);
}

#cube:hover #top {
  -webkit-transform: translate(-50%, -200%) rotateX(-90deg);
          transform: translate(-50%, -200%) rotateX(-90deg);
}

#cube:hover #bottom {
  -webkit-transform: translate(-50%, 100%) rotateX(90deg);
          transform: translate(-50%, 100%) rotateX(90deg);
}

#cube:hover #left {
  -webkit-transform: translate(-200%, -50%) rotateY(90deg);
          transform: translate(-200%, -50%) rotateY(90deg);
}

#cube:hover #right {
  -webkit-transform: translate(100%, -50%) rotateY(-90deg);
          transform: translate(100%, -50%) rotateY(-90deg);
}

#cube:hover #back {
  -webkit-transform: translateX(-50%) translateY(-50%) translateZ(300px);
          transform: translateX(-50%) translateY(-50%) translateZ(300px);
}

@-webkit-keyframes rotate-cube {
  0% {
    -webkit-transform: translate(-50%, -50%) rotateX(0) rotateY(0) rotateZ(0deg);
            transform: translate(-50%, -50%) rotateX(0) rotateY(0) rotateZ(0deg);
  }
  100% {
    -webkit-transform: translate(-50%, -50%) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
            transform: translate(-50%, -50%) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

@keyframes rotate-cube {
  0% {
    -webkit-transform: translate(-50%, -50%) rotateX(0) rotateY(0) rotateZ(0deg);
            transform: translate(-50%, -50%) rotateX(0) rotateY(0) rotateZ(0deg);
  }
  100% {
    -webkit-transform: translate(-50%, -50%) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
            transform: translate(-50%, -50%) rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}
/*# sourceMappingURL=style.css.map */